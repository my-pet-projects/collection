package brewery

import (
	"fmt"
	"strings"
)

templ Form(params BreweryFormParams, errs BreweryFormErrors) {
	<div
		id="brewery-form"
		hx-ext="response-targets"
		data-preselected-country={ strings.ToLower(params.CountryCode) }
		data-preselected-city={ fmt.Sprint(params.CityId) }
		x-data={ `{ preselectedCountry: $el.dataset.preselectedCountry || '', preselectedCity: parseInt($el.dataset.preselectedCity) || 0 }` }
		x-on:country-selected.window="
			const cityContainer = document.getElementById('city-container');
			const cityLoading = document.getElementById('city-loading');

			if (cityContainer) cityContainer.style.display = 'none';
			if (cityLoading) cityLoading.style.display = 'block';

			const countryCode = $event.detail.selectedValue;
            let cityUrl = '/geo/countries/' + countryCode + '/cities?showAllOption=false';
            if (preselectedCity !== 0) {
                cityUrl += '&preselected=' + preselectedCity;
            }

			// Load cities for selected country
			htmx.ajax('GET', cityUrl, {
				target: '#city-container',
				swap: 'innerHTML'
			}).then(() => {
				// Show city container and hide loading
				if (cityContainer) cityContainer.style.display = 'block';
				if (cityLoading) cityLoading.style.display = 'none';
			}).catch((error) => {
				console.error('Error loading cities:', error);
				if (cityContainer) cityContainer.style.display = 'block';
				if (cityLoading) cityLoading.style.display = 'none';
			});
		"
	>
		<div class="mb-8">
			<h2 class="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-3xl font-bold leading-tight tracking-tight text-transparent sm:text-4xl">Brewery Information</h2>
			<p class="mt-2 text-base text-gray-600 sm:text-lg">Fill out the details about this brewery</p>
		</div>
		<form
			class="space-y-6"
			hx-post="/workspace/brewery"
			hx-on::before-request="document.getElementById('brewery-errors').innerHTML = ''"
			hx-target="#brewery-form"
			hx-target-error="#brewery-errors"
			hx-trigger="submit"
			hx-indicator=".hx-save-indicator-toggle"
			hx-disabled-elt="input:not([type=hidden]),button"
			hx-on::response-error="document.getElementById('brewery-errors')?.classList.remove('hidden')"
			hx-on::after-request="if ($event.detail.successful) document.getElementById('brewery-errors')?.classList.add('hidden')"
		>
			<input type="hidden" id="id" name="id" value={ fmt.Sprint(params.Id) }/>
			<!-- Brewery Name -->
			<div class="space-y-2">
				<div class="flex items-center justify-between">
					<label for="name" class="block text-sm font-medium text-gray-900">
						Brewery <span class="text-orange-500">*</span>
					</label>
					if errs.Name != "" {
						<p class="flex items-center text-xs text-red-600">
							<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
							</svg>
							<span class="truncate">{ errs.Name }</span>
						</p>
					}
				</div>
				<input
					type="text"
					id="name"
					name="name"
					placeholder="Enter brewery name"
					value={ params.Name }
					autocapitalize="none"
					autocomplete="off"
					autocorrect="off"
					class={
						"block w-full rounded-2xl border-0 px-4 py-3 outline-none text-sm ring-1 ring-inset transition-all duration-200 focus:ring-2 focus:ring-inset focus:ring-amber-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:opacity-50",
						templ.KV("bg-red-50 text-red-900 ring-red-300 placeholder:text-red-400 focus:ring-red-500 focus:ring-offset-2", errs.Name != ""),
						templ.KV("bg-white ring-gray-200 placeholder:text-gray-500", errs.Name == ""),
					}
				/>
			</div>
			<!-- Country Selection -->
			<div class="space-y-2">
				<div class="flex items-center justify-between">
					<label for="country-select" class="block text-sm font-medium text-gray-900">
						Country <span class="text-orange-500">*</span>
					</label>
					if errs.Country != "" {
						<p class="flex items-center text-xs text-red-600">
							<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
							</svg>
							<span class="truncate">{ errs.Country }</span>
						</p>
					}
				</div>
				<div id="country-container">
					<!-- Loading indicator -->
					<div class="flex h-12 w-full items-center justify-center rounded-2xl border border-gray-300 bg-gray-50">
						<div class="flex items-center space-x-2 text-gray-500">
							<div class="h-4 w-4 animate-spin rounded-full border-2 border-gray-300 border-t-amber-500"></div>
							<span class="text-sm">Loading countries...</span>
						</div>
					</div>
				</div>
			</div>
			<!-- City Selection -->
			<div class="space-y-2">
				<div class="flex items-center justify-between">
					<label for="city-select" class="block text-sm font-medium text-gray-900">
						City <span class="text-orange-500">*</span>
					</label>
					if errs.City != "" {
						<p class="flex items-center text-xs text-red-600">
							<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
							</svg>
							<span class="truncate">{ errs.City }</span>
						</p>
					}
				</div>
				<div class="space-y-2">
					<!-- City Container -->
					<div id="city-container" class="w-full">
						<!-- Initial disabled state -->
						<div class="w-full">
							<div class="flex h-12 w-full cursor-not-allowed items-center justify-between rounded-2xl border border-gray-200 bg-gray-50 px-4 py-3 text-sm font-medium text-gray-400">
								<span>Select a country first</span>
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-5 w-5">
									<path fill-rule="evenodd" d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd"></path>
								</svg>
							</div>
						</div>
					</div>
					<!-- Loading indicator -->
					<div id="city-loading" class="w-full" style="display: none;">
						<div class="flex h-12 w-full items-center justify-center rounded-2xl border border-gray-300 bg-gray-50">
							<div class="flex items-center space-x-2 text-gray-500">
								<div class="h-4 w-4 animate-spin rounded-full border-2 border-gray-300 border-t-amber-500"></div>
								<span class="text-sm">Loading cities...</span>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- Error Container -->
			<div id="brewery-errors" class="mt-4 hidden rounded-2xl border border-red-200 bg-red-50 p-4 text-sm text-red-700 shadow-md"></div>
			<!-- Submit Button -->
			<div class="border-t border-gray-200 pt-4">
				<button
					type="submit"
					class="inline-flex w-48 items-center justify-center rounded-2xl bg-gray-900 px-6 py-3 text-sm font-medium text-white shadow-lg transition-all duration-300 hover:scale-105 hover:bg-gray-800 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
				>
					<!-- Loading Content -->
					<span class="hx-save-indicator-toggle htmx-indicator flex items-center">
						<svg class="mr-2 h-4 w-4 animate-spin text-amber-300" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
						</svg>
						<span>
							if params.IsNew() {
								Creating...
							} else {
								Updating...
							}
						</span>
					</span>
					<!-- Default Content -->
					<span class="hx-save-indicator-toggle hide-on-hx-request flex items-center">
						<svg class="mr-2 h-4 w-4 text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
							<path d="M5 4h11l3 3v12a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"></path>
							<path d="M7 4v4h8V4"></path>
							<circle cx="12" cy="14" r="2"></circle>
						</svg>
						<span>
							if params.IsNew() {
								Create Brewery
							} else {
								Update Brewery
							}
						</span>
					</span>
				</button>
			</div>
		</form>
		<!-- Separate element to load the country selection to avoid conflicts in the main form -->
		<div
			class="hidden"
			hx-get={ fmt.Sprintf("/geo/countries?preselected=%s&showAllOption=false", strings.ToLower(params.CountryCode)) }
			hx-target="#country-container"
			hx-swap="innerHTML"
			hx-trigger="load"
		></div>
	</div>
}
