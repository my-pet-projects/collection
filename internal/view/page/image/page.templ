package image

import (
	"fmt"

	"github.com/my-pet-projects/collection/internal/view/layout"
)

templ Page(page ImagePageData) {
	@layout.BaseLayout() {
		<!-- Header Section -->
		<div class="mb-6 flex flex-col lg:mb-8 lg:flex-row lg:items-center lg:justify-between">
			<!-- Title Section -->
			<div class="mb-6 flex flex-col items-center text-center lg:mb-0 lg:flex-row lg:items-center lg:text-left">
				<div class="group mb-4 inline-flex h-16 w-16 items-center justify-center rounded-2xl bg-gradient-to-br from-amber-400 via-orange-500 to-red-500 shadow-lg transition-all duration-300 hover:scale-105 hover:shadow-xl lg:mb-0 lg:mr-6">
					<svg class="h-7 w-7 text-white transition-transform duration-300 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z"></path>
					</svg>
				</div>
				<div>
					<h1 class="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-3xl font-bold leading-tight tracking-tight text-transparent sm:text-4xl lg:text-5xl">
						Images
					</h1>
					<p class="text-base text-gray-600 sm:text-lg lg:text-xl">Manage your collection images</p>
				</div>
			</div>
		</div>
		<!-- Images Container -->
		<div class="overflow-hidden rounded-2xl bg-white shadow-xl ring-1 ring-gray-200/50">
			if len(page.Images) == 0 {
				<!-- Empty State -->
				<div class="p-12 text-center">
					<div class="mx-auto mb-8 flex h-20 w-20 items-center justify-center rounded-2xl bg-gradient-to-br from-gray-100 to-gray-200">
						<svg class="h-10 w-10 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z"></path>
						</svg>
					</div>
					<h3 class="mb-2 text-2xl font-semibold text-gray-900">No images yet</h3>
					<p class="text-base text-gray-500">Upload images to start building your collection</p>
				</div>
			} else {
				<!-- Status Bar -->
				<div class="border-b border-gray-200/70 bg-gradient-to-r from-white via-gray-50 to-white p-4 sm:p-6 lg:px-8">
					<div class="flex flex-row items-center justify-between space-x-3">
						<div class="flex items-center">
							<h2 class="text-xl font-bold text-gray-900 sm:text-2xl">Gallery</h2>
						</div>
						<div class="flex items-center">
							<div class="rounded-2xl bg-gradient-to-r from-blue-100 to-indigo-100 px-4 py-2 shadow-sm">
								<span class="text-sm font-bold text-blue-900">
									{ fmt.Sprintf("%d", len(page.Images)) }
									if len(page.Images) == 1 {
										image
									} else {
										images
									}
								</span>
							</div>
						</div>
					</div>
				</div>
				<!-- Images Grid -->
				<div class="p-6 lg:p-8">
					<div class="grid grid-cols-1 gap-6 sm:grid-cols-3 md:grid-cols-6">
						for _, image := range page.Images {
							<div
								id={ fmt.Sprintf("image-%d", image.ID) }
								class="group relative flex h-40 items-center justify-center overflow-hidden rounded-2xl bg-gray-50 shadow-sm ring-1 ring-gray-200 transition-all duration-200 hover:scale-105 hover:shadow-lg"
							>
								// @BeerMedia(image)
								<button
									hx-delete={ fmt.Sprintf("/workspace/images/%d", image.ID) }
									hx-confirm="Are you sure you want to delete this image?"
									hx-target={ fmt.Sprintf("#image-%d", image.ID) }
									hx-swap="outerHTML swap:0.1s"
									x-data
									x-on:htmx:response-error="$dispatch('notify', { variant: 'danger', xhrResponse: $event.detail.xhr.response })"
									class="absolute right-2 top-2 cursor-pointer rounded-full bg-red-500 p-1.5 text-white opacity-0 shadow-lg transition-all duration-200 hover:scale-110 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 group-hover:opacity-100"
									aria-label="Delete image"
								>
									<svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 text-white" viewBox="0 0 20 20" fill="currentColor">
										<path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"></path>
									</svg>
								</button>
							</div>
						}
					</div>
				</div>
			}
		</div>
	}
}
