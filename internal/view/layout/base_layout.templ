package layout

import (
	"github.com/my-pet-projects/collection/internal/util"
	"github.com/my-pet-projects/collection/internal/view/component/shared"
)

templ BaseLayout() {
	<!DOCTYPE html>
	<html lang="en">
		@head("test")
		<body>
			<div class="min-h-screen bg-gray-100">
				@navigation()
				<div class="py-6">
					<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
						<div class="flex flex-col lg:flex-row">
							{ children... }
						</div>
					</div>
				</div>
				<div>
					@shared.Notification()
				</div>
			</div>
		</body>
	</html>
}

templ head(title string) {
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<title>{ title }</title>
		<link rel="icon" type="image/svg" sizes="32x32" href="/assets/img/pint-of-beer-svgrepo-com.svg"/>
		<link href="/assets/css/tailwind-output.gen.css" rel="stylesheet"/>
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css"
		/>
		<link href="/assets/css/app.css" rel="stylesheet"/>
		<script src="https://unpkg.com/htmx.org@2.0.3" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/htmx-ext-response-targets@2.0.1/response-targets.js"></script>
		<script src="https://unpkg.com/htmx-ext-debug@2.0.0/debug.js"></script>
		<script src="https://unpkg.com/htmx.org@1.9.11/dist/ext/path-params.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
		<script src="/assets/js/select.js"></script>
		<script src="/assets/js/upload.js" type="module"></script>
		// <script src="https://cdn.tailwindcss.com"></script>
		<link href="https://releases.transloadit.com/uppy/v3.27.0/uppy.min.css" rel="stylesheet"/>
		<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/intersect@3.x.x/dist/cdn.min.js"></script>
		<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
	</head>
}

templ navigation() {
	// Top Navigation
	<nav class="shadow-xs bg-white">
		<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
			<div class="flex h-16 justify-between">
				<div class="flex">
					<div class="flex shrink-0 items-center">
						<a href="/" class="ml-2 flex">
							<img src="/assets/img/pint-of-beer-svgrepo-com.svg" class="mr-3 h-8" alt="Beer Collection"/>
							<span class="self-center whitespace-nowrap text-2xl font-bold">Beer Collection</span>
						</a>
					</div>
					<div class="hidden sm:ml-6 sm:flex sm:space-x-8">
						// <Link href="/" className="px-1 pt-1 border-b-2 text-sm font-medium">
						<a
							href="/workspace/beer"
							class={ "inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium", templ.KV("border-indigo-500 text-gray-900", util.UrlStartsWith(ctx, "/workspace/beer")), templ.KV("border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700", !util.UrlStartsWith(ctx, "/workspace/beer")) }
						>
							<svg class="mr-2 h-5 w-5" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg">
								<path d="M17 11h1a3 3 0 0 1 0 6h-1"></path><path d="M9 12v6"></path><path d="M13 12v6"></path><path d="M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z"></path><path d="M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8"></path>
							</svg>
							Beers
						</a>
						<a
							href="/workspace/brewery"
							class={ "inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium", templ.KV("border-indigo-500 text-gray-900", util.UrlStartsWith(ctx, "/workspace/brewery")), templ.KV("border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700", !util.UrlStartsWith(ctx, "/workspace/brewery")) }
						>
							<svg class="mr-2 h-5 w-5" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg">
								<path d="M 5.5 1.625 C 4.75 2 4.5 3 5 3.5 C 5.625 2.375 6.625 2.75 8.125 4 C 9.125 4.875 10.5 4.125 10.5 4.125 C 10.5 4.125 10.75 5.625 12.625 5.875 C 14.75 6.125 15.5 4.875 15.5 4.875 C 15.5 4.875 16 6.125 17.875 5.375 C 19.25 4.875 18.75 4 18.75 4 C 18.75 4 20 4 20 3.125 C 20 2 18.625 2.125 18.625 2.125 C 18.625 2.125 18.875 0.875 17.5 0.75 C 16.25 0.625 15.875 1.375 15.875 1.375 C 15.875 1.375 15.5 0 13.625 0 C 11.875 0 11.25 1.625 11.25 1.625 C 11.25 1.625 10.75 0.875 9.25 0.875 C 8.125 0.875 7.625 1.75 7.625 1.75 C 7.625 1.75 6.25 1.125 5.5 1.625 Z M 5.5 1.625 "></path>
								<path d="M 15 15.125 L 15 12.5 L 10 15.125 L 10 12.5 L 7 12.5 L 6.25 3.75 L 3.75 3.75 L 3 12.5 L 0 12.5 L 0 20 L 20 20 L 20 12.5 Z M 7.5 17.5 L 2.5 17.5 L 2.5 15 L 7.5 15 Z M 7.5 17.5 "></path>
							</svg>
							Breweries
						</a>
						<a
							href="/workspace/beer-style"
							class={ "inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium", templ.KV("border-indigo-500 text-gray-900", util.UrlStartsWith(ctx, "/workspace/beer-style")), templ.KV("border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700", !util.UrlStartsWith(ctx, "/workspace/beer-style")) }
						>
							<svg class="mr-2 h-5 w-5" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg">
								<path d="M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z"></path><rect x="3" y="14" width="7" height="7" rx="1"></rect><circle cx="17.5" cy="17.5" r="3.5"></circle>
							</svg>
							Styles
						</a>
						<a
							href="/workspace/images"
							class={ "inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium", 
							templ.KV("border-indigo-500 text-gray-900", util.UrlStartsWith(ctx, "/workspace/images")), 
							templ.KV("border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700", !util.UrlStartsWith(ctx, "/workspace/images")) }
						>
							<svg class="mr-2 h-5 w-5" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg">
								<path d="M18 22H4a2 2 0 0 1-2-2V6"></path><path d="m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18"></path><circle cx="12" cy="8" r="2"></circle><rect width="16" height="16" x="6" y="2" rx="2"></rect>
							</svg>
							Images
						</a>
						<a
							href="/workspace/images/upload"
							class={ "inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium", templ.KV("border-indigo-500 text-gray-900", util.UrlStartsWith(ctx, "/workspace/images/upload")), templ.KV("border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700", !util.UrlStartsWith(ctx, "/workspace/images/upload")) }
						>
							<svg class="mr-2 h-5 w-5" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg">
								<path d="M12 13v8"></path><path d="M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"></path><path d="m8 17 4-4 4 4"></path>
							</svg>
							Upload
						</a>
					</div>
				</div>
				<div class="hidden sm:ml-6 sm:flex sm:items-center">
					<div class="relative ml-3">
						<div>
							{{ user := util.UserFromContext(ctx) }}
							if user.IsAuthenticated() {
								<span>{ user.GetDisplayName() }</span>
							}
							<button class="focus:outline-hidden flex rounded-full bg-white text-sm focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
								<span class="sr-only">Open user menu</span>
								<img class="h-8 w-8 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt=""/>
							</button>
						</div>
					</div>
				</div>
				// <div class="-mr-2 flex items-center sm:hidden">
				//   <button
				//     onClick={() => setIsMenuOpen(!isMenuOpen)}
				//     class="focus:outline-hidden inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:ring-2 focus:ring-inset focus:ring-indigo-500"
				//   >
				//     <span class="sr-only">Open main menu</span>
				//     <Menu class="block h-6 w-6" />
				//   </button>
				// </div>
			</div>
		</div>
		// Mobile menu
		// <div class={`${isMenuOpen ? 'block' : 'hidden'} sm:hidden`}>
		//   <div class="space-y-1 pb-3 pt-2">
		//     <Link href="/" class="block border-l-4 border-indigo-500 bg-indigo-50 py-2 pl-3 pr-4 text-base font-medium text-indigo-700">
		//       Dashboard
		//     </Link>
		//     <Link href="/projects" class="block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-gray-500 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-700">
		//       Projects
		//     </Link>
		//     <Link href="/team" class="block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-gray-500 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-700">
		//       Team
		//     </Link>
		//   </div>
		//   <div class="border-t border-gray-200 pb-3 pt-4">
		//     <div class="flex items-center px-4">
		//       <div class="shrink-0">
		//         <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
		//       </div>
		//       <div class="ml-3">
		//         <div class="text-base font-medium text-gray-800">Tom Cook</div>
		//         <div class="text-sm font-medium text-gray-500">tom@example.com</div>
		//       </div>
		//       <button class="focus:outline-hidden ml-auto shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
		//         <span class="sr-only">View notifications</span>
		//         <Bell class="h-6 w-6" />
		//       </button>
		//     </div>
		//   </div>
		// </div>
	</nav>
}
