// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package workspace

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func layoutToggle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"order-1 flex overflow-hidden rounded-lg border border-gray-300 sm:order-2\" x-data=\"{ layout: 'grid' }\"><button @click=\"layout = 'grid'\" :class=\"layout === 'grid' ? 'bg-black text-white' : 'bg-white text-gray-700 hover:bg-gray-50'\" class=\"flex items-center gap-1 px-2 py-2 text-sm font-medium transition-colors duration-200 sm:gap-2 sm:px-3\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect> <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect> <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect> <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect></svg> <span class=\"hidden sm:inline\">Grid</span></button> <button @click=\"layout = 'list'\" :class=\"layout === 'list' ? 'bg-black text-white' : 'bg-white text-gray-700 hover:bg-gray-50'\" class=\"flex items-center gap-1 px-2 py-2 text-sm font-medium transition-colors duration-200 sm:gap-2 sm:px-3\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line> <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line> <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line> <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line> <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line> <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg> <span class=\"hidden sm:inline\">List</span></button> <button @click=\"layout = 'compact'\" :class=\"layout === 'compact' ? 'bg-black text-white' : 'bg-white text-gray-700 hover:bg-gray-50'\" class=\"flex items-center gap-1 px-2 py-2 text-sm font-medium transition-colors duration-200 sm:gap-2 sm:px-3\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line> <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line> <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line></svg> <span class=\"hidden sm:inline\">Compact</span></button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
