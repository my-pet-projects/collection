package workspace

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
	"github.com/my-pet-projects/collection/internal/view/layout"
)

type BreweryListPageParams struct {
	Page
	LimitPerPage int
}

templ BreweryListPage(params BreweryListPageParams) {
	@layout.BaseLayout() {
		@breweriesList(params)
	}
}

templ breweriesList(params BreweryListPageParams) {
	<div class="min-h-screen">
		<div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8 lg:py-8">
			<div
				x-data="{
					searching: false,
					hasErrors: false,
					countryFilterLoaded: false,
					searchValue: '',
				}"
				hx-ext="response-targets"
			>
				<!-- Header Section -->
				<div class="mb-8 flex flex-col lg:flex-row lg:items-center lg:justify-between">
					<!-- Title Section -->
					<div class="mb-6 flex flex-col items-center text-center lg:mb-0 lg:flex-row lg:items-center lg:text-left">
						<div class="group mb-4 inline-flex h-16 w-16 items-center justify-center rounded-2xl bg-gradient-to-br from-amber-400 via-orange-500 to-red-500 shadow-xl transition-all duration-300 hover:scale-110 hover:shadow-2xl lg:mb-0 lg:mr-6">
							<svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg" class="transition-transform duration-300 group-hover:rotate-12">
								<path d="M 5.5 1.625 C 4.75 2 4.5 3 5 3.5 C 5.625 2.375 6.625 2.75 8.125 4 C 9.125 4.875 10.5 4.125 10.5 4.125 C 10.5 4.125 10.75 5.625 12.625 5.875 C 14.75 6.125 15.5 4.875 15.5 4.875 C 15.5 4.875 16 6.125 17.875 5.375 C 19.25 4.875 18.75 4 18.75 4 C 18.75 4 20 4 20 3.125 C 20 2 18.625 2.125 18.625 2.125 C 18.625 2.125 18.875 0.875 17.5 0.75 C 16.25 0.625 15.875 1.375 15.875 1.375 C 15.875 1.375 15.5 0 13.625 0 C 11.875 0 11.25 1.625 11.25 1.625 C 11.25 1.625 10.75 0.875 9.25 0.875 C 8.125 0.875 7.625 1.75 7.625 1.75 C 7.625 1.75 6.25 1.125 5.5 1.625 Z M 5.5 1.625 "></path>
								<path d="M 15 15.125 L 15 12.5 L 10 15.125 L 10 12.5 L 7 12.5 L 6.25 3.75 L 3.75 3.75 L 3 12.5 L 0 12.5 L 0 20 L 20 20 L 20 12.5 Z M 7.5 17.5 L 2.5 17.5 L 2.5 15 L 7.5 15 Z M 7.5 17.5 "></path>
							</svg>
						</div>
						<div>
							<h1 class="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-3xl font-bold leading-tight tracking-tight text-transparent sm:text-4xl lg:text-5xl">
								Brewery Catalog
							</h1>
							<p class="text-base text-gray-600 sm:text-lg lg:text-xl">Breweries behind the beers I've tasted</p>
						</div>
					</div>
					<!-- Add Brewery Button -->
					<div class="flex-shrink-0">
						<a
							href="/workspace/brewery/create"
							class="group relative inline-flex items-center justify-center gap-2 overflow-hidden rounded-2xl bg-gray-900 px-6 py-3 text-sm font-semibold text-white shadow-xl transition-all duration-300 hover:scale-105 hover:shadow-2xl focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
						>
							<svg class="h-5 w-5 transition-transform duration-300 group-hover:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
							</svg>
							Add Brewery
						</a>
					</div>
				</div>
				<!-- Search and Filters Section -->
				<div class="mb-8 rounded-2xl bg-white p-6 shadow-xl ring-1 ring-gray-200/50 lg:p-8">
					<!-- Search Section -->
					<form
						id="search-form"
						hx-get="/breweries"
						hx-swap="innerHTML"
						hx-target="#brewery-grid"
						hx-trigger="load, keyup changed delay:500ms from:#search, country-selected from:body"
						hx-target-error="#brewery-list-errors"
						x-on:htmx:before-request="searching = true"
						x-on:htmx:response-error="searching = false; hasErrors = true;"
						x-on:htmx:config-request="
							const params = new URLSearchParams();
							const searchValue = document.getElementById('search')?.value?.trim();
							const countryValue = document.querySelector('[name=country]')?.value;
							const sizeValue = document.querySelector('[name=size]').value;
							
							if (searchValue) {
								params.set('query', searchValue);
							}
							if (countryValue) {
								params.set('country', countryValue);
							}
							if (!params.has('page')) {
							params.set('page', '1');
							}

							params.set('size', sizeValue);
							
							// Override the parameters
							event.detail.parameters = Object.fromEntries(params.entries());						
						"
						x-on:htmx:after-request="
							searching = false;
							hasErrors = !event.detail.successful;
							const form = event.target;
							const formData = new FormData(form);
							const params = new URLSearchParams();
							
							for (let [key, value] of formData.entries()) {
								if (value.trim()) {
									params.set(key, value.trim());
								}
							}
							
							const newUrl = '/workspace/brewery' + (params.toString() ? '?' + params.toString() : '');
							
							history.pushState(null, '', newUrl);
						"
						class="flex flex-col gap-4 sm:flex-row sm:items-stretch"
					>
						<!-- Search Input -->
						<div class="relative h-16 flex-1 sm:h-16">
							<input
								id="search"
								name="query"
								type="text"
								class="block h-full w-full rounded-2xl border-0 bg-gray-50/50 px-6 py-4 pl-14 pr-14 text-lg shadow-inner ring-1 ring-inset ring-gray-200 transition-all duration-300 placeholder:text-gray-400 hover:bg-white hover:ring-gray-300 focus:bg-white focus:outline-none focus:ring-2 focus:ring-amber-400 focus:ring-offset-2"
								placeholder="Search breweries by name..."
								x-model="searchValue"
							/>
							<!-- Search Icon -->
							<div
								x-show="!searching && countryFilterLoaded"
								class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-5"
							>
								<svg class="h-6 w-6 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35M17 10a7 7 0 11-14 0 7 7 0 0114 0z"></path>
								</svg>
							</div>
							<!-- Clear Button -->
							<button
								type="button"
								x-show="searchValue.length > 0"
								x-on:click="searchValue = ''; document.getElementById('search').value = ''; document.getElementById('search').dispatchEvent(new Event('keyup'))"
								class="absolute right-4 top-1/2 -translate-y-1/2 rounded-full bg-gray-200 p-2 text-gray-500 transition-all duration-200 hover:bg-gray-300 hover:text-gray-700"
							>
								<svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
								</svg>
							</button>
							<!-- Loading Indicator -->
							<div
								x-show="searching || !countryFilterLoaded"
								class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-5"
							>
								<div class="relative">
									<div class="h-6 w-6 animate-spin rounded-full border-2 border-amber-200 border-t-amber-500"></div>
									<div class="absolute inset-0 animate-pulse rounded-full bg-amber-100 opacity-20"></div>
								</div>
							</div>
						</div>
						<!-- Country Filter -->
						<div class="flex h-16 w-full items-center justify-center sm:h-16 sm:w-80" id="country-filter-container">
							<!-- Loading indicator -->
							<div class="h-5 w-5 animate-spin rounded-full border-2 border-gray-300 border-t-black"></div>
						</div>
						<!-- Size Filter (hidden) -->
						<input
							type="hidden"
							id="size"
							name="size"
							value={ fmt.Sprintf("%d", params.LimitPerPage) }
						/>
					</form>
					<!-- Separate element to load the country filter -->
					<div
						hx-get="/geo/countries?hasBreweries=true&showAllOption=true"
						hx-swap="innerHTML"
						hx-target="#country-filter-container"
						hx-trigger="load"
						x-on:htmx:after-request="countryFilterLoaded = true"
						class="hidden"
					></div>
				</div>
				<!-- Brewery List Container -->
				<div class="overflow-hidden rounded-3xl bg-white/90 shadow-2xl ring-1 ring-gray-200/50 backdrop-blur-sm">
					<!-- Status Bar -->
					<div class="border-b border-gray-200/70 bg-gradient-to-r from-white via-gray-50 to-white">
						<div id="results-count" class="flex flex-col p-6 sm:flex-row sm:items-center sm:justify-between lg:px-8"></div>
					</div>
					<!-- Content Area -->
					<div>
						<div id="brewery-grid">
							@BreweryListContent(BreweryListData{Breweries: []model.Brewery{}})
						</div>
						<!-- Error State -->
						<div id="brewery-list-errors" class="p-12 text-center"></div>
						<!-- Loading State -->
						<div id="brewery-list-indicator" class="htmx-indicator flex flex-col items-center justify-center p-16">
							<div class="relative">
								<div class="h-16 w-16 animate-spin rounded-full border-4 border-gray-200 border-t-amber-500 shadow-lg"></div>
								<div class="absolute inset-0 animate-pulse rounded-full bg-amber-100 opacity-20"></div>
							</div>
							<div class="mt-6 flex items-center space-x-2">
								<svg class="h-5 w-5 animate-bounce text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 11h1a3 3 0 0 1 0 6h-1M9 12v6M13 12v6"></path>
								</svg>
								<p class="text-lg font-medium text-gray-700">Discovering amazing breweries...</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

type BreweryListData struct {
	Breweries    []model.Brewery
	Query        string
	CountryIso   string
	CurrentPage  int
	TotalPages   int
	TotalResults int
	LimitPerPage int
	SortBy       string
}

templ BreweryListContent(data BreweryListData) {
	<!-- Results Count -->
	<div id="results-count" hx-swap-oob="true" class="border-b border-gray-200/70 bg-gradient-to-r from-white via-gray-50 to-white p-4 sm:p-6 lg:px-8">
		<div class="flex flex-row items-center justify-between space-x-3">
			<!-- Title -->
			<div class="flex items-center">
				<h2 class="text-xl font-bold text-gray-900 sm:text-2xl">Breweries</h2>
			</div>
			<!-- Results Count -->
			<div class="flex items-center">
				<div class="rounded-full bg-gradient-to-r from-amber-100 to-orange-100 px-3 py-1.5 shadow-sm sm:px-4 sm:py-2">
					<span class="text-xs font-bold text-amber-900 sm:text-sm">
						{ fmt.Sprintf("%d", data.TotalResults) }
						if data.TotalResults == 1 {
							brewery found
						} else {
							breweries found
						}
					</span>
				</div>
			</div>
		</div>
	</div>
	<!-- Loading Skeleton  -->
	<div
		id="brewery-list-skeleton"
		x-show="searching"
		x-transition:enter="transition ease-out duration-300"
		x-transition:enter-start="opacity-0"
		x-transition:enter-end="opacity-100"
	>
		@LoadingBreweriesShimmer(data.LimitPerPage)
	</div>
	<div
		id="brewery-grid"
		x-show="!searching"
		class="overflow-hidden"
	>
		if len(data.Breweries) == 0 {
			<!-- Empty State -->
			<div class="flex flex-col items-center justify-center px-8 py-24">
				<div class="mx-auto flex h-24 w-24 items-center justify-center rounded-full bg-gradient-to-br from-gray-100 via-gray-200 to-gray-300 shadow-inner">
					<svg class="h-12 w-12 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg">
						<path d="M 5.5 1.625 C 4.75 2 4.5 3 5 3.5 C 5.625 2.375 6.625 2.75 8.125 4 C 9.125 4.875 10.5 4.125 10.5 4.125 C 10.5 4.125 10.75 5.625 12.625 5.875 C 14.75 6.125 15.5 4.875 15.5 4.875 C 15.5 4.875 16 6.125 17.875 5.375 C 19.25 4.875 18.75 4 18.75 4 C 18.75 4 20 4 20 3.125 C 20 2 18.625 2.125 18.625 2.125 C 18.625 2.125 18.875 0.875 17.5 0.75 C 16.25 0.625 15.875 1.375 15.875 1.375 C 15.875 1.375 15.5 0 13.625 0 C 11.875 0 11.25 1.625 11.25 1.625 C 11.25 1.625 10.75 0.875 9.25 0.875 C 8.125 0.875 7.625 1.75 7.625 1.75 C 7.625 1.75 6.25 1.125 5.5 1.625 Z M 5.5 1.625 "></path>
						<path d="M 15 15.125 L 15 12.5 L 10 15.125 L 10 12.5 L 7 12.5 L 6.25 3.75 L 3.75 3.75 L 3 12.5 L 0 12.5 L 0 20 L 20 20 L 20 12.5 Z M 7.5 17.5 L 2.5 17.5 L 2.5 15 L 7.5 15 Z M 7.5 17.5 "></path>
					</svg>
				</div>
				<h3 class="mt-8 text-xl font-semibold text-gray-900">
					if data.Query != "" || data.CountryIso != "" {
						No breweries match your search
					} else {
						No breweries yet
					}
				</h3>
				<p class="mt-3 max-w-md text-center text-gray-600">
					if data.Query != "" || data.CountryIso != "" {
						Try adjusting your search terms to find breweries from the beers you've tasted.
					}
				</p>
			</div>
		} else {
			<!-- Brewery List -->
			<div class="divide-y divide-gray-100">
				for _, brewery := range data.Breweries {
					<div class="group relative px-4 py-4 transition-all duration-300 hover:bg-gradient-to-r hover:from-amber-50 hover:to-orange-50 sm:p-6">
						<div class="flex items-center space-x-3 sm:space-x-4">
							<!-- Brewery Avatar -->
							<div class="flex-shrink-0">
								<div class="flex h-12 w-12 items-center justify-center rounded-xl bg-gradient-to-br from-amber-400 via-orange-500 to-red-500 text-white shadow-lg transition-all duration-300 group-hover:scale-110 group-hover:shadow-xl sm:h-16 sm:w-16 sm:rounded-2xl">
									<span class="text-sm font-bold sm:text-lg">{ string([]rune(brewery.Name)[0:1]) }</span>
								</div>
							</div>
							<!-- Brewery Info -->
							<div class="min-w-0 flex-1">
								<div class="flex items-start justify-between">
									<div class="min-w-0 flex-1">
										<h3 class="text-lg font-bold text-gray-900 transition-colors duration-200 group-hover:text-amber-600 sm:text-xl">
											<a href={ templ.URL(fmt.Sprintf("/workspace/brewery/%d", brewery.ID)) } class="focus:outline-none">
												<span class="absolute inset-0"></span>
												{ brewery.Name }
											</a>
										</h3>
										<div class="mt-1 flex items-center space-x-2 text-xs text-gray-600 sm:mt-2 sm:text-sm">
											<svg class="h-3 w-3 text-gray-400 sm:h-4 sm:w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
											</svg>
											<span>{ brewery.City.Name }, { brewery.City.Country.NameCommon }</span>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
			<!-- Pagination -->
			if data.TotalPages > 1 {
				<div class="border-t border-gray-200/70 bg-gradient-to-r from-white via-gray-50 to-white px-4 py-6 sm:px-6 sm:py-8 lg:px-8">
					<div class="flex flex-col items-center justify-between space-y-4 sm:flex-row sm:items-center sm:space-y-0">
						<!-- Results Info -->
						<div class="text-center text-sm text-gray-700 sm:text-left">
							<span class="font-medium text-gray-900">
								{ fmt.Sprintf("%d", (data.CurrentPage-1)*data.LimitPerPage+1) } - { fmt.Sprintf("%d", min(data.CurrentPage*data.LimitPerPage, data.TotalResults)) }
							</span>
							<span class="mx-2 text-gray-500">of</span>
							<span class="font-medium text-gray-900">{ fmt.Sprintf("%d", data.TotalResults) }</span>
							<span class="ml-1 text-gray-600">breweries</span>
						</div>
						<!-- Pagination Controls  -->
						<div class="flex items-center space-x-1">
							<!-- First Page (Desktop Only) -->
							if data.CurrentPage > 2 {
								<button
									class="hidden h-10 w-10 items-center justify-center rounded-xl border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-sm transition-all duration-200 hover:scale-105 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 sm:inline-flex"
									hx-get={ templ.URL(fmt.Sprintf("/breweries?page=1&size=%d&query=%s&country=%s", data.LimitPerPage, data.Query, data.CountryIso)) }
									hx-target="#brewery-grid"
									hx-swap="innerHTML"
									hx-indicator="#brewery-list-skeleton"
									x-on:htmx:before-request="searching = true;"
									x-on:htmx:after-request="searching = false;"
									x-on:htmx:response-error="searching = false; hasErrors = true;"
								>
									1
								</button>
								if data.CurrentPage > 3 {
									<span class="hidden px-2 text-gray-400 sm:block">•••</span>
								}
							}
							<!-- Previous Button -->
							<button
								class="inline-flex h-10 items-center justify-center rounded-xl border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 shadow-sm transition-all duration-200 hover:scale-105 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:scale-100 sm:px-4"
								hx-get={ templ.URL(fmt.Sprintf("/breweries?page=%d&size=%d&query=%s&country=%s", data.CurrentPage-1, data.LimitPerPage, data.Query, data.CountryIso)) }
								hx-target="#brewery-grid"
								hx-swap="innerHTML"
								hx-indicator="#brewery-list-skeleton"
								x-on:htmx:before-request="searching = true;"
								x-on:htmx:after-request="searching = false;"
								x-on:htmx:response-error="searching = false; hasErrors = true;"
								if data.CurrentPage <= 1 {
									disabled="disabled"
								}
							>
								<svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
								</svg>
								<span class="hidden sm:inline">Previous</span>
								<span class="sm:hidden">Prev</span>
							</button>
							<!-- Current Page Indicator -->
							<div class="inline-flex h-10 items-center justify-center rounded-xl bg-gradient-to-r from-amber-500 to-orange-500 px-3 py-2 text-sm font-bold text-white shadow-lg sm:px-4">
								<span class="hidden sm:inline">{ fmt.Sprintf("%d", data.CurrentPage) }</span>
								<span class="sm:hidden">{ fmt.Sprintf("%d", data.CurrentPage) } / { fmt.Sprintf("%d", data.TotalPages) }</span>
							</div>
							<!-- Next Button -->
							<button
								class="inline-flex h-10 items-center justify-center rounded-xl border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 shadow-sm transition-all duration-200 hover:scale-105 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:scale-100 sm:px-4"
								hx-get={ templ.URL(fmt.Sprintf("/breweries?page=%d&size=%d&query=%s&country=%s", data.CurrentPage+1, data.LimitPerPage, data.Query, data.CountryIso)) }
								hx-target="#brewery-grid"
								hx-swap="innerHTML"
								hx-indicator="#brewery-list-skeleton"
								x-on:htmx:before-request="searching = true;"
								x-on:htmx:after-request="searching = false;"
								x-on:htmx:response-error="searching = false; hasErrors = true;"
								if data.CurrentPage >= data.TotalPages {
									disabled="disabled"
								}
							>
								<span class="hidden sm:inline">Next</span>
								<span class="sm:hidden">Next</span>
								<svg class="ml-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
								</svg>
							</button>
							<!-- Last Page (Desktop Only) -->
							if data.CurrentPage < data.TotalPages - 1 {
								if data.CurrentPage < data.TotalPages - 2 {
									<span class="hidden px-2 text-gray-400 sm:block">•••</span>
								}
								<button
									class="hidden h-10 w-10 items-center justify-center rounded-xl border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-sm transition-all duration-200 hover:scale-105 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 sm:inline-flex"
									hx-get={ templ.URL(fmt.Sprintf("/breweries?page=%d&size=%d&query=%s&country=%s", data.TotalPages, data.LimitPerPage, data.Query, data.CountryIso)) }
									hx-target="#brewery-grid"
									hx-swap="innerHTML"
									hx-indicator="#brewery-list-skeleton"
									x-on:htmx:before-request="searching = true;"
									x-on:htmx:after-request="searching = false;"
									x-on:htmx:response-error="searching = false; hasErrors = true;"
								>
									{ fmt.Sprintf("%d", data.TotalPages) }
								</button>
							}
						</div>
					</div>
				</div>
			}
		}
	</div>
}

templ LoadingBreweriesShimmer(breweriesCount ...int) {
	{{
		shimmerCount := 5
		if len(breweriesCount) > 0 {
			shimmerCount = breweriesCount[0]
		}
	}}
	<div class="divide-y divide-gray-100">
		for i := 0; i < shimmerCount; i++ {
			<!-- Skeleton Item -->
			<div class="px-4 py-4 sm:p-6">
				<div class="flex items-center space-x-3 sm:space-x-4">
					<div class="flex-shrink-0">
						<div class="h-12 w-12 animate-pulse rounded-xl bg-gray-200 sm:h-16 sm:w-16 sm:rounded-2xl"></div>
					</div>
					<div class="min-w-0 flex-1">
						<div class="animate-pulse space-y-2">
							<div class="h-5 w-3/4 rounded bg-gray-200 sm:h-6"></div>
							<div class="h-3 w-1/2 rounded bg-gray-200 sm:h-4"></div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
	<!-- Skeleton Pagination -->
	<div class="border-t border-gray-200/70 bg-gradient-to-r from-white via-gray-50 to-white px-4 py-6 sm:px-6 sm:py-8 lg:px-8">
		<div class="flex flex-col items-center justify-between space-y-4 sm:flex-row sm:items-center sm:space-y-0">
			<!-- Skeleton Results Info -->
			<div class="animate-pulse">
				<div class="h-4 w-32 rounded bg-gray-200"></div>
			</div>
			<!-- Skeleton Pagination Controls -->
			<div class="flex items-center space-x-1">
				<div class="h-10 w-20 animate-pulse rounded-xl bg-gray-200"></div>
				<div class="h-10 w-10 animate-pulse rounded-xl bg-gray-200"></div>
				<div class="h-10 w-16 animate-pulse rounded-xl bg-gray-200"></div>
			</div>
		</div>
	</div>
}
