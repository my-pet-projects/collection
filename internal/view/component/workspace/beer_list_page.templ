package workspace

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
	"github.com/my-pet-projects/collection/internal/view/layout"
	"net/url"
	"strconv"
)

type BeerListData struct {
	Beers        []model.Beer
	Query        string
	CountryIso   string
	CurrentPage  int
	TotalPages   int
	TotalResults int
	LimitPerPage int
}

func (d BeerListData) CalculateDisplayedCount() int {
	displayed := d.CurrentPage * d.LimitPerPage
	if displayed > d.TotalResults {
		return d.TotalResults
	}
	return displayed
}

templ LoadingShimmer(cardsCount ...int) {
	{{
		shimmerCount := 6
		if len(cardsCount) > 0 {
			shimmerCount = cardsCount[0]
		}
	}}
	for i := 0; i < shimmerCount; i++ {
		@BeerCardSkeleton()
	}
}

templ BeerListPage(page BeerListPageData) {
	@layout.BaseLayout() {
		<!-- Header Section -->
		<div class="mb-6 flex flex-col lg:mb-8 lg:flex-row lg:items-center lg:justify-between">
			<!-- Title Section -->
			<div class="mb-6 flex flex-col items-center text-center lg:mb-0 lg:flex-row lg:text-left">
				<div class="group mb-4 inline-flex h-16 w-16 items-center justify-center rounded-2xl bg-gradient-to-br from-amber-400 via-orange-500 to-red-500 shadow-lg transition-all duration-300 hover:scale-105 hover:shadow-xl lg:mb-0 lg:mr-6">
					<svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg" class="transition-transform duration-300 group-hover:rotate-12">
						<path d="M17 11h1a3 3 0 0 1 0 6h-1"></path>
						<path d="M9 12v6"></path>
						<path d="M13 12v6"></path>
						<path d="M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5s2-.5 3-.5 2 .5 3 .5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z"></path>
						<path d="M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8"></path>
					</svg>
				</div>
				<div>
					<h1 class="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-3xl font-bold leading-tight tracking-tight text-transparent sm:text-4xl lg:text-5xl">
						My Collection
					</h1>
					<p class="text-base text-gray-600 sm:text-lg lg:text-xl">Discover and catalog your brews that you've tasted</p>
				</div>
			</div>
			<!-- Add Beer Button -->
			<div class="flex flex-shrink-0 justify-center lg:justify-end">
				<a
					href="/workspace/beer/create"
					class="group relative inline-flex items-center justify-center gap-2 overflow-hidden rounded-2xl bg-gray-900 px-6 py-3 text-sm font-semibold text-white shadow-xl transition-all duration-300 hover:scale-105 hover:shadow-2xl focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
				>
					<svg class="h-5 w-5 transition-transform duration-300 group-hover:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
					</svg>
					Add Beer
				</a>
			</div>
		</div>
		<div
			x-data="{
				searching: false,
				hasErrors: false,
				loadingMore: false,
				scrollY: 0,
				searchValue: '',
				countryFilterLoaded: false,
			}"
			x-init="window.addEventListener('scroll', () => scrollY = window.scrollY)"
			hx-ext="response-targets"
		>
			<!-- Search and Filters Section -->
			<div class="mb-8 rounded-2xl bg-white p-6 shadow-lg ring-1 ring-gray-200/50">
				<!-- Search Section -->
				<form
					id="search-form"
					hx-get="/beers"
					hx-swap="innerHTML"
					hx-target="#beer-grid"
					hx-trigger="load, keyup changed delay:500ms from:#search, country-selected from:body"
					hx-target-error="#beer-list-errors"
					x-on:htmx:before-request="searching = true"
					x-on:htmx:response-error="searching = false; hasErrors = true;"
					x-on:htmx:config-request="
								const params = new URLSearchParams();
								const searchValue = document.getElementById('search')?.value?.trim();
								const countryValue = document.querySelector('[name=country]')?.value;
								const sizeValue = document.querySelector('[name=size]').value;

								if (searchValue) {
									params.set('query', searchValue);
								}
								if (countryValue) {
									params.set('country', countryValue);
								}
								if (!params.has('page')) {
									params.set('page', '1');
								}

								params.set('size', sizeValue);

								// Override the parameters
								event.detail.parameters = Object.fromEntries(params.entries());
							"
					x-on:htmx:after-request="
								searching = false;
								hasErrors = !event.detail.successful;
								const form = event.target;
								const formData = new FormData(form);
								const params = new URLSearchParams();

								for (let [key, value] of formData.entries()) {
									if (value.trim()) {
										params.set(key, value.trim());
									}
								}

								const newUrl = '/workspace/beer' + (params.toString() ? '?' + params.toString() : '');

								history.pushState(null, '', newUrl);
							"
					class="flex flex-col gap-4 sm:flex-row sm:items-stretch"
				>
					<!-- Search Input -->
					<div class="relative flex-1">
						<input
							id="search"
							name="query"
							type="text"
							class="block h-12 w-full rounded-2xl border-0 bg-gray-50/50 px-4 py-3 pl-12 pr-12 text-sm shadow-inner ring-1 ring-inset ring-gray-200 transition-all duration-300 placeholder:text-gray-400 hover:bg-white hover:ring-gray-300 focus:bg-white focus:outline-none focus:ring-2 focus:ring-amber-400"
							placeholder="Search beers by name or brewery..."
							x-model="searchValue"
						/>
						<!-- Search Icon -->
						<div
							x-show="!searching && countryFilterLoaded"
							class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4"
						>
							<svg class="h-5 w-5 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35M17 10a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</div>
						<!-- Clear Search Button -->
						<button
							type="button"
							x-show="searchValue.length > 0"
							x-on:click="searchValue = ''; document.getElementById('search').value = ''; document.getElementById('search').dispatchEvent(new Event('keyup'))"
							class="absolute right-3 top-1/2 -translate-y-1/2 rounded-full p-1.5 text-gray-500 transition-all duration-200 hover:bg-gray-300 hover:text-gray-700"
						>
							<svg class="h-3 w-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
							</svg>
						</button>
						<!-- Loading indicator -->
						<div
							x-show="searching || !countryFilterLoaded"
							class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4"
						>
							<div class="h-5 w-5 animate-spin rounded-full border-2 border-amber-200 border-t-amber-500"></div>
						</div>
					</div>
					<!-- Country Filter -->
					<div class="flex w-full items-center justify-center sm:w-80" id="country-filter-container">
						<!-- Loading indicator -->
						<div class="h-5 w-5 animate-spin rounded-full border-2 border-gray-300 border-t-black"></div>
					</div>
					<!-- Size Filter -->
					<input
						type="hidden"
						id="size"
						name="size"
						value={ fmt.Sprintf("%d", page.LimitPerPage) }
					/>
				</form>
				<!-- Separate element to load the country filter -->
				<div
					hx-get="/geo/countries?hasBreweries=true&showAllOption=true"
					hx-swap="innerHTML"
					hx-target="#country-filter-container"
					hx-trigger="load"
					x-on:htmx:after-request="countryFilterLoaded = true"
					class="hidden"
				></div>
			</div>
			<!-- Error Messages -->
			<div
				id="beer-list-errors"
				class="mb-6 hidden rounded-2xl border border-red-200 bg-red-50 p-4 text-sm text-red-700 shadow-md"
				x-show="hasErrors"
				x-transition:enter="transition ease-out duration-300"
				x-transition:enter-start="opacity-0 transform scale-95"
				x-transition:enter-end="opacity-100 transform scale-100"
			></div>
			<!-- Controls Section -->
			<div class="mb-6 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
				<!-- Search Results Count -->
				<div class="flex items-center gap-3">
					<div id="results-count" class="text-sm text-gray-600 sm:text-base"></div>
				</div>
				<!-- View Toggle -->
				<div class="flex items-center gap-2 rounded-lg bg-gray-100 p-1">
					<button
						type="button"
						class="rounded-md bg-white px-3 py-1.5 text-xs font-medium text-gray-700 shadow-sm transition-all duration-200"
					>
						<svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
						</svg>
					</button>
					<button
						type="button"
						class="rounded-md px-3 py-1.5 text-xs font-medium text-gray-500 transition-all duration-200 hover:text-gray-700"
					>
						<svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
						</svg>
					</button>
				</div>
			</div>
			<!-- Results Section -->
			<div class="pb-8">
				<!-- Beer Grid Container -->
				<div
					id="beer-grid"
					x-show="!searching"
					x-transition:enter="transition ease-out duration-300"
					x-transition:enter-start="opacity-0 transform scale-98"
					x-transition:enter-end="opacity-100 transform scale-100"
					class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3"
				></div>
				<!-- Loading Shimmer -->
				<div
					x-show="searching"
					x-transition:enter="transition ease-out duration-300"
					x-transition:enter-start="opacity-0"
					x-transition:enter-end="opacity-100"
					class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3"
				>
					@LoadingShimmer(3)
				</div>
			</div>
			<!-- Progress Section -->
			<div class="border-t border-gray-200 pt-6">
				<div id="page-info" class="text-center">
					<!-- This will be updated via HTMX -->
				</div>
			</div>
			<!-- Back to Top Button -->
			<button
				type="button"
				x-show="scrollY > 300"
				x-transition:enter="transition ease-out duration-300"
				x-transition:enter-start="opacity-0 transform translate-y-4"
				x-transition:enter-end="opacity-100 transform translate-y-0"
				x-on:click="window.scrollTo({ top: 0, behavior: 'smooth' })"
				class="fixed bottom-6 right-6 z-50 rounded-full bg-gray-900 p-3 text-white shadow-lg transition-all duration-200 hover:-translate-y-1 hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50"
			>
				<svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
				</svg>
			</button>
		</div>
	}
}

templ BeerList(data BeerListData) {
	<!-- Results Count (OOB Swapped) -->
	<div id="results-count" hx-swap-oob="true">
		if data.TotalResults > 0 {
			Showing <span class="font-semibold text-gray-900">{ fmt.Sprintf("%d", data.CalculateDisplayedCount()) }</span>
			of <span class="font-semibold text-gray-900">{ fmt.Sprintf("%d", data.TotalResults) }</span> beers
		} else {
			No beers found
		}
	</div>
	<!-- Page Info (OOB Swapped) -->
	<div id="page-info" hx-swap-oob="true">
		if data.TotalResults > 0 {
			<div class="rounded-lg bg-gray-50 px-4 py-3">
				<div class="flex flex-col items-center gap-2 text-sm">
					<!-- Main count -->
					<div class="font-semibold text-gray-900">
						{ fmt.Sprintf("%d", data.CalculateDisplayedCount()) } of { fmt.Sprintf("%d", data.TotalResults) } beers
					</div>
					<!-- Progress bar -->
					<div class="w-full max-w-xs">
						<div class="h-2 w-full rounded-full bg-gray-200">
							<div
								class="h-2 rounded-full bg-amber-500 transition-all duration-300"
								style={ fmt.Sprintf("width: %.1f%%", float64(data.CalculateDisplayedCount())/float64(data.TotalResults)*100) }
							></div>
						</div>
					</div>
					<!-- Page indicator -->
					if data.TotalPages > 1 {
						<div class="text-xs text-gray-600">
							Page { fmt.Sprintf("%d", data.CurrentPage) } of { fmt.Sprintf("%d", data.TotalPages) }
						</div>
					}
				</div>
			</div>
		}
	</div>
	if data.TotalResults == 0 {
		<!-- No Results -->
		<div class="col-span-full flex flex-col items-center justify-center px-4 py-8 text-center sm:py-24">
			<div class="mx-auto mb-8 flex h-20 w-20 items-center justify-center rounded-2xl bg-gradient-to-br from-gray-100 to-gray-200">
				<svg class="h-10 w-10 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path d="M17 11h1a3 3 0 0 1 0 6h-1"></path>
					<path d="M9 12v6"></path>
					<path d="M13 12v6"></path>
					<path d="M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5s2-.5 3-.5 2 .5 3 .5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z"></path>
					<path d="M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8"></path>
				</svg>
			</div>
			<h3 class="mb-2 text-2xl font-semibold text-gray-900">No beers found</h3>
			<p class="text-base text-gray-500">
				Try adjusting your search terms or filters to discover more beers.
			</p>
		</div>
	} else {
		<!-- Beer Cards -->
		for _, beer := range data.Beers {
			@beerCard(beer)
		}
		<!-- Load More Trigger -->
		if data.CurrentPage < data.TotalPages {
			<div
				id="load-more-trigger"
				hx-get={ buildNextPageURL(data) }
				hx-trigger="intersect once threshold:0.8"
				hx-swap="beforeend"
				hx-target="#beer-grid"
				hx-target-error="#beer-list-errors"
				x-on:htmx:response-error="hasErrors = true"
				x-on:htmx:before-request="loadingMore = true"
				x-on:htmx:after-request="loadingMore = false; $el.remove()"
				class="invisible col-span-full h-20 w-full"
			></div>
		}
		<!-- Loading more indicator -->
		<div
			x-show="loadingMore"
			x-transition:enter="transition ease-out duration-300"
			x-transition:enter-start="opacity-0 transform translate-y-4"
			x-transition:enter-end="opacity-100 transform translate-y-0"
			class="col-span-full py-4 text-center"
		>
			<div class="inline-flex items-center gap-3 rounded-xl bg-gray-50 px-4 py-3">
				<div class="flex space-x-1">
					<div class="h-2 w-2 animate-bounce rounded-full bg-amber-600"></div>
					<div class="h-2 w-2 animate-bounce rounded-full bg-amber-600" style="animation-delay: 0.1s"></div>
					<div class="h-2 w-2 animate-bounce rounded-full bg-amber-600" style="animation-delay: 0.2s"></div>
				</div>
				<span class="font-medium text-gray-700">Loading more beers...</span>
			</div>
		</div>
	}
}

func buildNextPageURL(data BeerListData) string {
	params := url.Values{}
	params.Set("page", strconv.Itoa(data.CurrentPage+1))
	if data.Query != "" {
		params.Set("query", data.Query)
	}
	if data.CountryIso != "" {
		params.Set("country", data.CountryIso)
	}
	if data.LimitPerPage != 0 {
		params.Set("size", strconv.Itoa(data.LimitPerPage))
	}
	return "/beers?" + params.Encode()
}
