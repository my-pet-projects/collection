package workspace

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/view/component/shared"
)

templ BeerForm(params BeerFormParams, errs BeerFormErrors) {
	<div
		id="beer-form"
		hx-ext="response-targets"
	>
		<div class="mb-8">
			<h2 class="text-xl font-medium text-neutral-900">Beer Information</h2>
			<p class="mt-1 text-sm text-neutral-600">Fill out the details about this beer</p>
		</div>
		<div class="space-y-6">
			<!-- Brewery Location -->
			if params.Brewery != nil && params.Brewery.City != nil && params.Brewery.City.Country != nil {
				<div class="rounded-xl bg-neutral-50 p-4">
					<div class="flex items-center space-x-3">
						<img class="h-6 w-10 rounded object-cover shadow-sm" src={ params.Brewery.City.Country.FlagUrl } alt={ params.Brewery.GetCountryName() }/>
						<div class="min-w-0 flex-1">
							<p class="truncate text-sm font-medium text-neutral-900">{ params.Brewery.GetCityName() }</p>
							<p class="truncate text-xs text-neutral-600">{ params.Brewery.GetCountryName() }</p>
						</div>
					</div>
				</div>
			}
			<!-- General Error -->
			if errs.Error != "" {
				<div class="rounded-xl border border-red-200 bg-red-50 p-4">
					<div class="flex">
						<svg class="h-5 w-5 flex-shrink-0 text-red-400" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"></path>
						</svg>
						<div class="ml-3">
							<p class="text-sm text-red-800">{ errs.Error }</p>
						</div>
					</div>
				</div>
			}
			<form
				class="space-y-6"
				hx-post="/workspace/beer"
				hx-target="#beer-form"
				hx-target-error="#beer-errors"
				hx-trigger="submit"
				hx-indicator=".hx-save-indicator-toggle"
				hx-disabled-elt="input,button"
			>
				<input type="hidden" id="id" name="id" value={ fmt.Sprint(params.ID) }/>
				<input type="hidden" id="isActive" name="isActive" value={ fmt.Sprint(params.IsActive) }/>
				<!-- Brand Field -->
				<div class="space-y-2">
					<div class="flex items-center justify-between">
						<label for="brand" class="block text-sm font-medium text-neutral-900">
							Brand <span class="text-orange-500">*</span>
						</label>
						if errs.Brand != "" {
							<p class="flex items-center text-xs text-red-600">
								<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
								</svg>
								<span class="truncate">{ errs.Brand }</span>
							</p>
						}
					</div>
					<input
						type="text"
						id="brand"
						name="brand"
						placeholder="Enter beer brand"
						value={ params.Brand }
						autocapitalize="none"
						autocomplete="off"
						autocorrect="off"
						class={
							"block w-full rounded-xl border-0 px-4 py-3 text-sm ring-1 ring-inset transition-all duration-200 focus:ring-2 focus:ring-inset disabled:cursor-not-allowed disabled:bg-neutral-50 disabled:opacity-50",
							templ.KV("bg-red-50 text-red-900 ring-red-300 placeholder:text-red-400 focus:ring-red-500", errs.Brand != ""),
							templ.KV("bg-white ring-neutral-300 placeholder:text-neutral-500 focus:ring-neutral-900", errs.Brand == ""),
						}
					/>
				</div>
				<!-- Type Field -->
				<div class="space-y-2">
					<div class="flex items-center justify-between">
						<label for="type" class="block text-sm font-medium text-neutral-900">
							Type
						</label>
						if errs.Type != "" {
							<p class="flex items-center text-xs text-red-600">
								<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
								</svg>
								<span class="truncate">{ errs.Type }</span>
							</p>
						}
					</div>
					<input
						type="text"
						id="type"
						name="type"
						placeholder="Enter beer type"
						if params.Type != nil {
							value={ *params.Type }
						}
						autocapitalize="none"
						autocomplete="off"
						autocorrect="off"
						class={
							"block w-full rounded-xl border-0 px-4 py-3 text-sm ring-1 ring-inset transition-all duration-200 focus:ring-2 focus:ring-inset disabled:cursor-not-allowed disabled:bg-neutral-50 disabled:opacity-50",
							templ.KV("bg-red-50 text-red-900 ring-red-300 placeholder:text-red-400 focus:ring-red-500", errs.Type != ""),
							templ.KV("bg-white ring-neutral-300 placeholder:text-neutral-500 focus:ring-neutral-900", errs.Type == ""),
						}
					/>
				</div>
				<!-- Style Field -->
				<div class="space-y-2">
					<div class="flex items-center justify-between">
						<label for="style" class="block text-sm font-medium text-neutral-900">
							Style
						</label>
						if errs.Style != "" {
							<p class="flex items-center text-xs text-red-600">
								<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
								</svg>
								<span class="truncate">{ errs.Style }</span>
							</p>
						}
					</div>
					@shared.StylesAutocomplete(shared.StyleData{
						Styles:          params.Styles,
						SelectedStyleId: params.StyleID,
						HasError:        errs.Style != "",
					})
				</div>
				<!-- Brewery Field -->
				<div class="space-y-2">
					<div class="flex items-center justify-between">
						<label for="brewery" class="block text-sm font-medium text-neutral-900">
							Brewery
						</label>
						if errs.Brewery != "" {
							<p class="flex items-center text-xs text-red-600">
								<svg class="mr-1 h-3 w-3 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
								</svg>
								<span class="truncate">{ errs.Brewery }</span>
							</p>
						}
					</div>
					@shared.BreweriesAutocomplete(shared.BreweriesData{
						Breweries:       params.Breweries,
						SelectedBrewery: params.BreweryID,
						HasError:        errs.Brewery != "",
					})
				</div>
				<!-- Form Actions -->
				<div class="flex flex-col gap-4 border-t border-gray-100 pt-8 sm:flex-row sm:items-center sm:justify-between">
					<div>
						<button
							type="submit"
							class="inline-flex w-40 items-center justify-center rounded-lg bg-gray-900 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
						>
							<!-- Loading Content -->
							<span class="hx-save-indicator-toggle htmx-indicator flex items-center">
								<svg class="mr-2 h-4 w-4 animate-spin text-white" fill="none" viewBox="0 0 24 24">
									<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
									<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
								</svg>
								<span>
									if params.IsNew() {
										Creating...
									} else {
										Updating...
									}
								</span>
							</span>
							<!-- Default Content -->
							<span class="hx-save-indicator-toggle hide-on-hx-request flex items-center">
								<svg class="mr-2 h-4 w-4 text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
									<path d="M5 4h11l3 3v12a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"></path>
									<path d="M7 4v4h8V4"></path>
									<circle cx="12" cy="14" r="2"></circle>
								</svg>
								<span>
									if params.IsNew() {
										Create Beer
									} else {
										Update Beer
									}
								</span>
							</span>
						</button>
					</div>
					if !params.IsNew() {
						<div>
							<button
								type="button"
								hx-delete={ fmt.Sprintf("/workspace/beer/%d", params.ID) }
								hx-confirm="Are you sure you want to delete this beer?"
								hx-target-error="#beer-errors"
								hx-indicator="#delete-indicator"
								hx-disabled-elt="input,button"
								class="inline-flex w-full items-center justify-center rounded-lg border border-red-300 bg-white px-6 py-3 text-sm font-medium text-red-700 transition-colors hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 sm:w-auto"
							>
								<span id="delete-indicator" class="htmx-indicator mr-2">
									<svg class="h-4 w-4 animate-spin" viewBox="0 0 24 24">
										<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle>
										<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
									</svg>
								</span>
								<svg class="mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"></path>
								</svg>
								Delete Beer
							</button>
						</div>
					}
				</div>
			</form>
			<div id="beer-errors" class="mt-6"></div>
		</div>
	</div>
}
