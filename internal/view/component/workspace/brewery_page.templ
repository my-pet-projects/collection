package workspace

import "fmt"

type BreweryPage struct {
	Page
	FormParams BreweryFormParams
	FormErrors BreweryFormErrors
}

templ WorkspaceBreweryPage(page BreweryPage) {
	@adminLayout(page.Page, BreweryC(page.FormParams, page.FormErrors))
}

templ BreweryC(params BreweryFormParams, errors BreweryFormErrors) {
	<div class="flex-1 py-6 px-10">
		<div>
			<div class="mb-6">
				<h1 class="pb-2 text-2xl font-semibold text-slate-800 border-b border-gray-400">Brewery</h1>
			</div>
		</div>
		<div class="grid grid-cols-2 gap-y-5 gap-x-8">
			@BreweryForm(params, errors)
		</div>
	</div>
}

templ BreweryForm(params BreweryFormParams, errs BreweryFormErrors) {
	<div>
		<form
			class="col-span-1"
			hx-post="/workspace/brewery"
			hx-trigger="submit"
			hx-swap="outerHTML"
		>
			<input type="hidden" id="id" name="id" value={ fmt.Sprint(params.Id) }/>
			<div
				if errs.Name != "" {
					class="form-group has-err"
				}
			>
				<label for="name" class="text-sm font-medium leading-10">
					<span>Name</span>
				</label>
				<input
					type="text"
					id="name"
					name="name"
					placeholder=""
					value={ params.Name }
					autocapitalize="none"
					autocomplete="off"
					autocorrect="off"
					class="flex rounded w-full border border-input border-gray-300 bg-transparent px-3 py-3 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
				/>
				<span class="mt-1 text-sm form-group-error text-red-600">{ errs.Name }</span>
			</div>
			<div
				if errs.Country != "" {
					class="form-group has-err"
				}
			>
				<label for="name" class="text-sm font-medium leading-10">
					<span>Country</span>
				</label>
				<input type="hidden" id="selected-country" name="selectedCountry" value={ params.CountryCode }/>
				<div hx-get={ "/geo/countries?hasBreweries=true" } hx-trigger="load">
					<img alt="Loading ..." class="py-2" width="30" src="/img/tail-spin.svg"/>
				</div>
				<span class="mt-1 text-sm form-group-error text-red-600">{ errs.Country }</span>
			</div>
			<div
				if errs.City != "" {
					class="form-group has-err"
				}
			>
				<label for="city" class="text-sm font-medium leading-10">
					<span>City</span>
				</label>
				<input type="hidden" id="selected-city" name="selectedCity" value={ fmt.Sprint(params.CityId) }/>
				<div id="cityContainer">
					<select
						type="text"
						id="name"
						name="name"
						class="flex rounded w-full border border-input border-gray-300 bg-transparent px-3 py-3 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
						disabled
					>
						<option>Select a country first</option>
					</select>
				</div>
				<span class="mt-1 text-sm form-group-error text-red-600">{ errs.City }</span>
			</div>
			<div class="mt-6">
				<button
					type="submit"
					class="whitespace-nowrap bg-blue-700 px-6 py-3 text-sm border-blue-700 text-white"
				>
					<span class="btn-content">
						if params.IsNew() {
							Create bewery
						} else {
							Update brewery
						}
					</span>
				</button>
			</div>
			if errs.Error != "" {
				<div class="mt-6">
					<div class="p-4 text-sm text-red-800 rounded-lg bg-red-50" role="alert">
						{ errs.Error }
					</div>
				</div>
			}
		</form>
	</div>
}
