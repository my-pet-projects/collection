package shared

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
)

type StyleData struct {
	Styles          []model.BeerStyle
	SelectedStyleId *int
	HasError        bool
}

func (d StyleData) ToAutocompleteData() []AutoCompleteData {
	data := make([]AutoCompleteData, len(d.Styles))
	for i, style := range d.Styles {
		data[i] = AutoCompleteData{
			Label: style.Name,
			Value: fmt.Sprint(style.ID),
		}
	}
	return data
}

templ StylesAutocomplete(data StyleData) {
	{{
		props := AutoCompleteProps{
			ID:             "style",
			Name:           "style",
			Data:           data.ToAutocompleteData(),
			EventNamespace: "style",
			HasError:       data.HasError,
		}
		if data.SelectedStyleId != nil {
			props.PreselectedValue = fmt.Sprint(*data.SelectedStyleId)
		}
	}}
	@AutoComplete(props)
}
