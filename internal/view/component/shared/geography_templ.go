// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package shared

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
	"strconv"
	"strings"
)

type CountriesData struct {
	Countries          []model.Country
	HasBreweries       bool
	PreselectedCountry string
	ShowAllOption      bool
}

func (c CountriesData) ToAutocompleteData() []AutoCompleteData {
	data := make([]AutoCompleteData, len(c.Countries))
	for i, country := range c.Countries {
		data[i] = AutoCompleteData{
			Label: country.NameCommon,
			Value: strings.ToLower(country.Cca2),
			Image: fmt.Sprintf("https://flagcdn.com/%s.svg", strings.ToLower(country.Cca2)),
		}
	}
	return data
}

func CountriesAutoComplete(countriesData CountriesData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = AutoComplete(AutoCompleteProps{
			ID:               "country",
			Name:             "country",
			Data:             countriesData.ToAutocompleteData(),
			ShowAllOption:    countriesData.ShowAllOption,
			AllOptionLabel:   "All countries",
			AllOptionIcon:    "üåç",
			EventNamespace:   "country",
			ListenToEvents:   []string{"country-selected", "country-cleared"},
			PreselectedValue: strings.ToLower(countriesData.PreselectedCountry),
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

type CitiesData struct {
	Cities          []model.City
	PreselectedCity string
	ShowAllOption   bool
}

func (c CitiesData) ToAutocompleteData() []AutoCompleteData {
	data := make([]AutoCompleteData, len(c.Cities))
	for i, city := range c.Cities {
		data[i] = AutoCompleteData{
			Label: city.Name,
			Value: strconv.Itoa(city.ID),
		}
	}
	return data
}

func CitiesAutoComplete(citiesData CitiesData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = AutoComplete(AutoCompleteProps{
			ID:               "city",
			Name:             "city",
			Data:             citiesData.ToAutocompleteData(),
			ShowAllOption:    citiesData.ShowAllOption,
			AllOptionLabel:   "All cities",
			EventNamespace:   "city",
			PreselectedValue: citiesData.PreselectedCity,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
