package shared

import (
	"encoding/json"
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
)

type BreweriesData struct {
	Breweries       []model.Brewery
	SelectedBrewery *int
}

func breweriesJson(countriesData BreweriesData) string {
	choices := make([]choicesData, 0)
	selected := false
	if countriesData.SelectedBrewery == nil || *countriesData.SelectedBrewery == 0 {
		selected = true
	}
	emptyChoice := choicesData{
		Value:    "",
		Label:    "Select a brewery",
		Selected: selected,
		Disabled: false,
	}
	choices = append(choices, emptyChoice)
	for _, brewery := range countriesData.Breweries {
		selected := false
		if countriesData.SelectedBrewery != nil && *countriesData.SelectedBrewery == brewery.ID {
			selected = true
		}
		choices = append(choices, choicesData{
			Value:            fmt.Sprint(brewery.ID),
			Label:            fmt.Sprintf(`<span class="flex items-center justify-center">%s</span><span class="ml-4">%s</span>`, brewery.City.Country.NameCommon, brewery.Name),
			Selected:         selected,
			Disabled:         false,
			CustomProperties: customProperty{SearchableValue: brewery.City.Country.NameCommon},
		})
	}
	bytes, _ := json.Marshal(choices)
	return string(bytes)
}

templ BrewerySelector(data BreweriesData) {
	<app-select
		name="brewery"
		data-items={ breweriesJson(data) }
	></app-select>
}
