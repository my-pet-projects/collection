package shared

import (
	"fmt"
	"github.com/my-pet-projects/collection/internal/model"
)

type BreweriesData struct {
	Breweries       []model.Brewery
	SelectedBrewery *int
	HasError        bool
}

func (d BreweriesData) ToAutocompleteData() []AutoCompleteData {
	data := make([]AutoCompleteData, len(d.Breweries))
	for i, brewery := range d.Breweries {
		data[i] = AutoCompleteData{
			Label: brewery.Name,
			Value: fmt.Sprint(brewery.ID),
		}
	}
	return data
}

templ BreweriesAutocomplete(data BreweriesData) {
	{{
		props := AutoCompleteProps{
			ID:             "brewery",
			Name:           "brewery",
			Data:           data.ToAutocompleteData(),
			EventNamespace: "brewery",
			HasError:       data.HasError,
		}
		if data.SelectedBrewery != nil {
			props.PreselectedValue = fmt.Sprint(*data.SelectedBrewery)
		}
	}}
	@AutoComplete(props)
}
