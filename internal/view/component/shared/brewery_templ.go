// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package shared

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/my-pet-projects/collection/internal/db"
import "fmt"
import "encoding/json"

type BreweriesData struct {
	Breweries       []db.Brewery
	SelectedBrewery *int
}

func breweriesJson(countriesData BreweriesData) string {
	choices := make([]choicesData, 0)
	selected := false
	if countriesData.SelectedBrewery == nil || *countriesData.SelectedBrewery == 0 {
		selected = true
	}
	emptyChoice := choicesData{
		Value:    "",
		Label:    "Select a brewery",
		Selected: selected,
		Disabled: false,
	}
	choices = append(choices, emptyChoice)
	for _, brewery := range countriesData.Breweries {
		selected := false
		if countriesData.SelectedBrewery != nil && *countriesData.SelectedBrewery == brewery.Id {
			selected = true
		}
		choices = append(choices, choicesData{
			Value:            fmt.Sprint(brewery.Id),
			Label:            fmt.Sprintf(`<span class="flex justify-center items-center">%s</span><span class="ml-4">%s</span>`, brewery.Country.NameCommon, brewery.Name),
			Selected:         selected,
			Disabled:         false,
			CustomProperties: customProperty{SearchableValue: brewery.Country.NameCommon},
		})
	}
	bytes, _ := json.Marshal(choices)
	return string(bytes)
}

func BrewerySelector(data BreweriesData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<app-select name=\"brewery\" data-items=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(breweriesJson(data))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/component/shared/brewery.templ`, Line: 45, Col: 34}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></app-select>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
