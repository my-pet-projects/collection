package component

import "github.com/my-pet-projects/collection/internal/db"

css border() {
	border: 1px solid #eeeeee;
	border-radius: 4px;
	margin: 10px;
	padding-top: 30px;
	padding-bottom: 30px;
}

templ counts() {
	<form id="countsForm" action="/" method="POST" hx-post="/" hx-select="#countsForm" hx-swap="outerHTML">
		<div class="columns">
			<div class={ "column", "has-text-centered", "is-primary", border }>
				<h1 class="title is-size-1 has-text-centered">1</h1>
				<p class="subtitle has-text-centered">Global</p>
				<div><button class="button is-primary" type="submit" name="global" value="global">+1</button></div>
			</div>
			<div class={ "column", "has-text-centered", border }>
				<h1 class="title is-size-1 has-text-centered">2</h1>
				<p class="subtitle has-text-centered">Session</p>
				<div><button class="button is-secondary" type="submit" name="session" value="session">+1</button></div>
			</div>
		</div>
	</form>
}

templ Page(countries []db.Country) {
	<html>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Counts</title>
			<link rel="stylesheet" href="/assets/css/bulma.min.css"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png"/>
			<link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png"/>
			<link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png"/>
			<link rel="manifest" href="/assets/favicon/site.webmanifest"/>
			<link href="/css/tailwind-output.gen.css" rel="stylesheet"/>
			<script src="https://unpkg.com/htmx.org@1.9.9" integrity="sha384-QFjmbokDn2DjBjq+fM+8LUIVrAgqcNW2s0PjAxHETgRn9l4fvX31ZxDxvwQnyMOX" crossorigin="anonymous"></script>
		</head>
		<body class="bg-gray-100">
			<header class="hero is-primary">
				<div class="hero-body">
					<div class="container">
						<h1 class="title">Counts</h1>
					</div>
				</div>
			</header>
			<section class="section">
				<div class="container">
					<div class="columns is-centered">
						<div class="column is-half">
							@counts()
						</div>
					</div>
				</div>
			</section>
			<div>
				@combobox(countries)
			</div>
			<div>
				for _, country:=range countries {
					<div>
						{ country.NameCommon }
					</div>
				}
			</div>
		</body>
	</html>
}

templ combobox(countries []db.Country) {
	<div>
		<label>Make</label>
		<select name="make" hx-get="/models" hx-target="#models" hx-indicator=".htmx-indicator">
			<option value="audi">Audi</option>
			<option value="toyota">Toyota</option>
			<option value="bmw">BMW</option>
		</select>
	</div>
	<div>
		<label>Model</label>
		<select id="models" name="model">
			<option value="a1">A1</option>
			...
		</select>
	</div>
	<div class="sm:col-span-3">
		<label for="country" class="block text-sm font-medium leading-6 text-gray-900">Country</label>
		<div class="mt-2">
			<select id="country" name="country" hx-push-url="true" autocomplete="country-name" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
				<option value="" disabled selected>Select a country</option>
				for _, country:=range countries {
					<option>
						{ country.NameCommon }
					</option>
				}
			</select>
		</div>
	</div>
}

templ ComboboxC(cities []db.City) {
	<div class="sm:col-span-3">
		<label for="country" class="block text-sm font-medium leading-6 text-gray-900">Country</label>
		<div class="mt-2">
			<select id="country" name="country" autocomplete="country-name" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
				<option value="" disabled selected>Select a country</option>
				for _, city:=range cities {
					<option>
						{ city.Name }
					</option>
				}
			</select>
		</div>
	</div>
}

templ BreweriesPage(breweries []db.Brewery) {
	<div>breweries</div>
	for _, brewery := range breweries {
		<div>
			{ brewery.Name }
		</div>
	}
}

templ BeersPage(beers []db.Beer) {
	<div>beers</div>
	for _, beer := range beers {
		<div>
			{ beer.Brand }
		</div>
	}
}
