package shared

import "github.com/my-pet-projects/collection/internal/db"
import "fmt"
import "strings"
import "encoding/json"

type CountriesData struct {
	Countries             []db.Country
	HasBreweries          bool
	StoreSelectionInQuery bool
}

type choicesType struct {
	Value    string `json:"value"`
	Label    string `json:"label"`
	Selected bool   `json:"selected"`
	Disabled bool   `json:"disabled"`
}

func countriesJson(countriesData CountriesData) string {
	choices := make([]choicesType, 0)
	emptyChoice := choicesType{
		Value:    "",
		Label:    "Select a country",
		Selected: true,
		Disabled: false,
	}
	choices = append(choices, emptyChoice)
	for _, country := range countriesData.Countries {
		choices = append(choices, choicesType{
			Value:    strings.ToLower(country.Cca2),
			Label:    fmt.Sprintf(`<span class="flex justify-center items-center "><img src="https://flagcdn.com/w20/%s.png" width="20" /></span><span class="ml-4">%s</span>`, strings.ToLower(country.Cca2), country.NameCommon),
			Selected: false,
			Disabled: false,
		})
	}
	bytes, _ := json.Marshal(choices)
	return string(bytes)
}

func citiesJson(cities []db.City) string {
	choices := make([]choicesType, 0)
	emptyChoice := choicesType{
		Value:    "",
		Label:    "Select a city",
		Selected: true,
		Disabled: false,
	}
	choices = append(choices, emptyChoice)
	for _, city := range cities {
		choices = append(choices, choicesType{
			Value:    fmt.Sprint(city.Id),
			Label:    city.Name,
			Selected: false,
			Disabled: false,
		})
	}
	bytes, _ := json.Marshal(choices)
	return string(bytes)
}

templ CountriesSelector(countriesData CountriesData) {
	<div hx-ext="path-params">
		<select
			id="country"
			name="country"
			class="choices-select"
			autocomplete="off"
			hx-get="/geo/countries/{countryIso}/cities"
			hx-vals="js:{countryIso: event.target.value.toLowerCase()}"
			hx-trigger="change"
			hx-target="#cityContainer"
			hx-swap="innerHTML"
			hx-params="countryIso"
			data-items={ countriesJson(countriesData) }
		></select>
	</div>
	<script type="text/javascript">
		initializeChoices('country');
	</script>
}

templ CitiesSelector(cities []db.City) {
	<div>
		<select
			id="city"
			name="city"
			class="choices-select"
			autocomplete="off"
			data-items={ citiesJson(cities) }
		>
			<option value="" disabled selected>Select a city</option>
		</select>
	</div>
	<script type="text/javascript">
		initializeChoices('city');
	</script>
}
